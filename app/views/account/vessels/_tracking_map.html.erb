<div id="single_map">
  <div id="map">
  </div>
</div>
<div class="row">
  <div class="col-md-12">
    <div class="well">
      <%= form_tag send("account_map_path"), method: :post do |f| %>
        <div class="row">
          <div class="col-md-10">
            <%= select_tag :vessel_ids, options_from_collection_for_select(current_user.vessels, :id, :name), multiple: true, class: 'select-select2 form-control' %>
          </div>
          <div class="col-md-2">
            <%= submit_tag "Show Vessels", class: "btn btn-primary btn-block" %>
          </div>
      <% end %>
    </div>
  </div>
</div>
<div class="row">
  <div class="col-md-12">
    <div class="well">
      <table class="table table-bordered">
        <tr>
          <th>Vessel</th>
          <th>Latest Log</th>
          <th>Timestamp</th>
        </tr>
        <% vessels.each do |vessel| %>
          <tr>
            <td><%= vessel.name %> <small><%= vessel.code %></small></td>
            <td id="vessel-latest-log-<%= vessel.id %>"></td>
            <td id="vessel-latest-log-timestamp-<%= vessel.id %>"></td>
          </tr>
        <% end %>
      </table>
    </div>
  </div>
</div>

<script>

var vessels = <%= "#{vessels.to_json}".html_safe %>;

// GLOBAL VARIABLES
var map;
var startPoint;
var markerLayer;
var vectorLayer;
var pointsLayer;
var projectionWGS;
var projectionSMP;
var lineLayer;
var zoom = 12;
var mapnik;
var ol;
var defaultMarker;
var size;
var offset;

var center_lat = '14.561';
var center_lon = '121.0330099999998';

$(document).ready(function() {

  // == Functions Below =========================================================
  ol = {
    /*
    * ol.stretch_canvas:
    *   Many people experiance an issue where
    *   the container div (map) does not actually stretch to
    *   100%. This function sets the div to the height and width
    *   of the parent div. 100% fix.
    */
    stretch_canvas: function() {
      var oldiv_height = $('#map').parent().css('height');
      var oldiv_width  = $('#map').parent().css('width');
      $('#map').css('height', oldiv_height);
      $('#map').css('width', oldiv_width); 
    }
  }

  // == Window.resize events ===================================================
  $(window).resize(function() {
    // Fix map size on resize
    ol.stretch_canvas();
  });
  initialize();

  drawVessels();
  setInterval(drawVessels, 5000);
});

function drawVessels() {
  clearData();
  console.log("Drawing vessels");
  $.each(vessels, function(index, value) {
    var latest_log;
    $.ajax({
      url: '/api/vessels/last_location?access_token=' + value['access_token'],
      success: function(result) {
                latest_log = result;
              },
      async: false
    });

    if(!$.isEmptyObject(latest_log)) {
      console.log("Latest log for " + value['name'] + ":");
      console.log(JSON.stringify(latest_log));
      var vesselPoint = new OpenLayers.LonLat(latest_log.lon, latest_log.lat).transform(projectionWGS, map.getProjectionObject());
      var vesselMarker = new OpenLayers.Marker(vesselPoint, defaultMarker.clone());
      var popupText = "<b>" + value['name'] + "</b><br>" + value['code'];
      var popup = new OpenLayers.Popup.FramedCloud("Popup",
        vesselMarker.lonlat, new OpenLayers.Size(200,200),
        popupText, null,
        true
      );
      markerLayer.addMarker(vesselMarker);
      map.addPopup(popup);

      // Change table
      $("#vessel-latest-log-" + value.id).html("<b>Lon:</b> " + latest_log.lon + " <b>Lat:</b> " + latest_log.lat);
      $("#vessel-latest-log-timestamp-" + value.id).html(latest_log.logged_at);
    } else {
      console.log("Error in latest log for vessel " + value["name"]);
    }
    
  });
}

function clearData() {
  pointsLayer.destroyFeatures();
  markerLayer.clearMarkers();
  while(map.popups.length) {
    map.removePopup(map.popups[0]);
  }
}

function initialize() {
  mapnik        = new OpenLayers.Layer.OSM();
  map           = new OpenLayers.Map('map');
  map.addLayer(mapnik);

  size = new OpenLayers.Size(21,25);
  offset = new OpenLayers.Pixel(-(size.w/2), -size.h);
  defaultMarker = new OpenLayers.Icon("http://www.openlayers.org/dev/img/marker.png", size, offset);

  // Points
  pointsLayer = new OpenLayers.Layer.Vector("Points Layer");
  map.addLayer(pointsLayer);
  map.addControl(new OpenLayers.Control.DrawFeature(pointsLayer, OpenLayers.Handler.Path));

  // Marker Layer
  markerLayer = new OpenLayers.Layer.Markers("Marker Layer");
  map.addLayer(markerLayer);

  projectionWGS = new OpenLayers.Projection("EPSG:4326");
  startPoint    = new OpenLayers.LonLat(center_lon, center_lat).transform(projectionWGS, map.getProjectionObject());

  map.setCenter(startPoint, zoom);

  ol.stretch_canvas();
}

</script>
