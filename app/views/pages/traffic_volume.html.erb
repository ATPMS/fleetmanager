<div id="single_map">
  <div id="curtain">
    <div class="text">
      Loading...
    </div>
  </div>
  <div id="map">
  </div>
</div>
<div class="container">
  <div class="row">
    <div class="col-md-12">
      <h2>Legend</h2>
      <table class="table table-bordered">
        <tr>
          <th>Heavy</th>
          <td style="background: red"></td>
        </tr>
        <tr>
          <th>Medium</th>
          <td style="background: yellow"></td>
        </tr>
        <tr>
          <th>Low</th>
          <td style="background: green"></td>
        </tr>
      </table>
    </div>
  </div>
</div>

<script>
// GLOBAL VARIABLES
var map;
var startPoint;
var markerLayer;
var vectorLayer;
var pointsLayer;
var projectionWGS;
var projectionSMP;
var lineLayer;
var zoom = 12;
var mapnik;
var ol;
var defaultMarker;
var size;
var offset;

var center_lat = '14.561';
var center_lon = '121.0330099999998';

$(document).ready(function() {

  // == Functions Below =========================================================
  ol = {
    /*
    * ol.stretch_canvas:
    *   Many people experiance an issue where
    *   the container div (map) does not actually stretch to
    *   100%. This function sets the div to the height and width
    *   of the parent div. 100% fix.
    */
    stretch_canvas: function() {
      var oldiv_height = $('#map').parent().css('height');
      var oldiv_width  = $('#map').parent().css('width');
      $('#map').css('height', oldiv_height);
      $('#map').css('width', oldiv_width); 
    }
  }

  // == Window.resize events ===================================================
  $(window).resize(function() {
    // Fix map size on resize
    ol.stretch_canvas();
  });
  initialize();

});

function triggerLoading() {
}

function clearData() {
  pointsLayer.destroyFeatures();
  markerLayer.clearMarkers();
  while(map.popups.length) {
    map.removePopup(map.popups[0]);
  }
}

function drawLine(data, color) {
  var points = new Array();

  for(d in data) {
    var entry = data[d];
    var p = new OpenLayers.Geometry.Point(entry.lon, entry.lat).transform(projectionWGS, map.getProjectionObject());
    points.push(p);
  }

  var line = new OpenLayers.Geometry.LineString(points);
  var style = {
    strokeColor: color,
    strokeOpacity: 0.8,
    strokeWidth: 2
  };

  var lineFeature = new OpenLayers.Feature.Vector(line, null, style);
  lineLayer.addFeatures([lineFeature]);
}

function drawTracks() {
  clearData();
  var redColor = "#f00";
  var greenColor = "#0f0";
  var blueColor = "#00f";
  
  $.getJSON(Routes.get_traffic_volume_path(), function(data) {
    window.x = data;
    $.each(data, function(i, d) {
      var points = new Array();
      var speed = d.speed;
      console.log("Speed: " + speed);
      var startPointLon = d["node_start_loc"][0];
      var startPointLat = d["node_start_loc"][1];
      var startPoint = {"lon": startPointLon, "lat": startPointLat};
      var endPointLon = d["node_end_loc"][0];
      var endPointLat = d["node_end_loc"][1];
      var endPoint = {"lon": endPointLon, "lat": endPointLat};
      points.push(startPoint);
      points.push(endPoint);
      drawLine(points, redColor);
    });
    $("#curtain").fadeOut();
  });
}

function initialize() {
  mapnik        = new OpenLayers.Layer.OSM();
  map           = new OpenLayers.Map('map');
  map.addLayer(mapnik);

  size = new OpenLayers.Size(21,25);
  offset = new OpenLayers.Pixel(-(size.w/2), -size.h);
  defaultMarker = new OpenLayers.Icon("http://www.openlayers.org/dev/img/marker.png", size, offset);

  // Points
  pointsLayer = new OpenLayers.Layer.Vector("Points Layer");
  map.addLayer(pointsLayer);
  map.addControl(new OpenLayers.Control.DrawFeature(pointsLayer, OpenLayers.Handler.Path));

  // Marker Layer
  markerLayer = new OpenLayers.Layer.Markers("Marker Layer");
  map.addLayer(markerLayer);

  // Line Layer
  lineLayer = new OpenLayers.Layer.Vector("Line Layer");
  map.addLayer(lineLayer);

  projectionWGS = new OpenLayers.Projection("EPSG:4326");
  startPoint    = new OpenLayers.LonLat(center_lon, center_lat).transform(projectionWGS, map.getProjectionObject());

  map.setCenter(startPoint, zoom);

  ol.stretch_canvas();

  drawTracks();
}
</script>
