<div class="well">
  <div class="row">
    <div class="col-md-3">
      <label>Start DateTime:</label><br>
      <input type="text" class="form-control datetimepicker" id="start_time"/>
    </div>
    <div class="col-md-3">
      <label>End DateTime:</label><br>
      <input type="text" class="form-control datetimepicker" id="end_time"/>
    </div>
    <div class="col-md-3">
      <label>Color:</label><br>
      <input type="text" class="form-control colorpicker" id="color"/>
    </div>
    <div class="col-md-3">
      <label>Actions:</label><br>
      <button onclick="drawTracks();" class="btn btn-info">Filter Now</button>
    </div>
  </div>
</div>
<div id="single_map">
  <div id="map">
  </div>
</div>

<script>

var vessel = <%= "#{vessel.to_json}".html_safe %>;

// GLOBAL VARIABLES
var map;
var startPoint;
var markerLayer;
var vectorLayer;
var pointsLayer;
var projectionWGS;
var projectionSMP;
var lineLayer;
var zoom = 12;
var mapnik;
var ol;
var defaultMarker;
var size;
var offset;

var center_lat = '14.561';
var center_lon = '121.0330099999998';

var layerStyle;

$(document).ready(function() {

  // == Functions Below =========================================================
  ol = {
    /*
    * ol.stretch_canvas:
    *   Many people experiance an issue where
    *   the container div (map) does not actually stretch to
    *   100%. This function sets the div to the height and width
    *   of the parent div. 100% fix.
    */
    stretch_canvas: function() {
      var oldiv_height = $('#map').parent().css('height');
      var oldiv_width  = $('#map').parent().css('width');
      $('#map').css('height', oldiv_height);
      $('#map').css('width', oldiv_width); 
    }
  }

  // == Window.resize events ===================================================
  $(window).resize(function() {
    // Fix map size on resize
    ol.stretch_canvas();
  });
  initialize();
  drawVessel();
});

function drawLine(data, color) {
  var points = new Array();

  for(d in data) {
    var entry = data[d];
    console.log(entry);
    var p = new OpenLayers.Geometry.Point(entry.lon, entry.lat).transform(projectionWGS, map.getProjectionObject());
    points.push(p);
  }

  var line = new OpenLayers.Geometry.LineString(points);
  var style = {
    strokeColor: color,
    strokeOpacity: 0.8,
    strokeWidth: 2
  };

  var lineFeature = new OpenLayers.Feature.Vector(line, null, style);
  lineLayer.addFeatures([lineFeature]);
}

function drawTracks() {
  clearData();
  var lineColor = $("#color").val();
  var startDateTime = $("#start_time").val();
  var endDateTime = $("#end_time").val();
  $.getJSON(Routes.api_get_logs_path({start_datetime: startDateTime, end_datetime: endDateTime, access_token: vessel.access_token}), function(data) {
    for(var key in data) {
      points = data[key];
      drawLine(points, lineColor);
    }
  });
}

function drawVessel() {
  console.log("Drawing vessel");
  var latest_log;
  $.ajax({
    url: '/api/vessels/last_location?access_token=' + vessel['access_token'],
    success: function(result) {
              latest_log = result;
            },
    async: false
  });

  var vesselPoint;

  if(!$.isEmptyObject(latest_log)) {
    console.log("Latest log for " + vessel['name'] + ":");
    console.log(JSON.stringify(latest_log));
    vesselPoint = new OpenLayers.LonLat(latest_log.lon, latest_log.lat).transform(projectionWGS, map.getProjectionObject());
    var vesselMarker = new OpenLayers.Marker(vesselPoint, defaultMarker.clone());
    var popupText = "<b>" + vessel['name'] + "</b><br>" + vessel['code'];
    var popup = new OpenLayers.Popup.FramedCloud("Popup",
      vesselMarker.lonlat, new OpenLayers.Size(200,200),
      popupText, null,
      true
    );
    //markerLayer.addMarker(vesselMarker);
    //map.addPopup(popup);

    // Change table
    $("#vessel-latest-log-" + vessel.id).html("<b>Lon:</b> " + latest_log.lon + " <b>Lat:</b> " + latest_log.lat);
    $("#vessel-latest-log-timestamp-" + vessel.id).html(latest_log.logged_at);
    map.setCenter(vesselPoint, zoom);
  } else {
    console.log("Error in latest log for vessel " + vessel["name"]);
  }
}

function clearData() {
  pointsLayer.destroyFeatures();
  lineLayer.destroyFeatures();
}

function initialize() {
  mapnik        = new OpenLayers.Layer.OSM();
  map           = new OpenLayers.Map('map');
  map.addLayer(mapnik);

  layerStyle = OpenLayers.Util.extend({}, OpenLayers.Feature.Vector.style['default']);
  layerStyle.fillOpacity = 0.5;
  layerStyle.graphicOpacity = 1;

  size = new OpenLayers.Size(21,25);
  offset = new OpenLayers.Pixel(-(size.w/2), -size.h);
  //defaultMarker = new OpenLayers.Icon("http://www.openlayers.org/dev/img/marker.png", size, offset);
  defaultMarker = new OpenLayers.Icon("http://www.goughmap.org/_a/cms_page_media/29/red_marker_1.png", size, offset);

  // Points
  pointsLayer = new OpenLayers.Layer.Vector("Points Layer");
  map.addLayer(pointsLayer);
  map.addControl(new OpenLayers.Control.DrawFeature(pointsLayer, OpenLayers.Handler.Path));

  // Marker Layer
  markerLayer = new OpenLayers.Layer.Markers("Marker Layer");
  map.addLayer(markerLayer);

  // Line Layer
  lineLayer = new OpenLayers.Layer.Vector("Line Layer");
  map.addLayer(lineLayer);
  map.addControl(new OpenLayers.Control.DrawFeature(lineLayer, OpenLayers.Handler.Path));

  projectionWGS = new OpenLayers.Projection("EPSG:4326");
  startPoint    = new OpenLayers.LonLat(center_lon, center_lat).transform(projectionWGS, map.getProjectionObject());

  map.setCenter(startPoint, zoom);

  ol.stretch_canvas();
}
</script>
